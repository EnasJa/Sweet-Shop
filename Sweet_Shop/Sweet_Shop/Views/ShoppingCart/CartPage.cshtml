<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <style>
        body {
            font-family: Fantasy, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #54352b;
        }

        #cart-items {
            margin-top: 20px;
        }

            #cart-items > div {
                border-bottom: 1px solid #ddd;
                padding: 10px 0;
                display: flex;
                align-items: center;
            }

                #cart-items > div:last-child {
                    border-bottom: none;
                }

            #cart-items img {
                width: 100px;
                margin-right: 20px;
            }

        p {
            margin: 0;
        }

        .btn-container {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            background-color: #54352b;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn:hover {
                background-color: #54352b;
            }

        .remove-btn {
            padding: 8px 15px;
            background-color: #54352b;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-left: auto; /* Align the button to the right */
        }

            .remove-btn:hover {
                background-color: #54352b;
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>Shopping Cart</h1>
        <div id="cart-items">
            <!-- Cart items will be displayed here -->
        </div>
        <div id="total-price">
            <!-- Total price will be displayed here -->
        </div>
		<div class="btn-container">
			<a class="btn" asp-controller="Customer" asp-action="MainPage">Back to Products Page</a>
            <a id="checkout-btn" class="btn" asp-controller="Payment" asp-action="PaymentPage">Pay</a>

        </div>
    </div>

    
        <script src="https://code.jquery.com/jquery-3.6.0.min.js" ></script>
    <script>
      
        $(document).ready(function () {
            // Initialize cart items in localStorage if not already present
            if (!localStorage.getItem("cartItems")) {
                localStorage.setItem("cartItems", JSON.stringify([]));
            }
            // If quantity is not set, initialize it to 1
           
            // Retrieve cart items from localStorage
            var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

            // Get the container to display cart items
            var cartContainer = $("#cart-items");

            // Display cart items
            displayCartItems(cartItems);

            // Function to display cart items
            function displayCartItems(cartItems) {
                cartContainer.empty(); // Clear existing cart items
                cartItems.forEach(function (item) {
                    var productHTML = `
                        <div class="cart-item" data-id="${item.id}">
                            <img src="${item.imageUrl}" alt="${item.name}" >
                            <div class="item-details">
                                <p>${item.name}</p>
                                 <p>${item.stock}</p>

                                <div class="quantity">
                                    <button class="decrease-quantity-btn">-</button>
                                    <span class="quantity-value">${item.quantity }</span>
                                    <button class="increase-quantity-btn">+</button>
                                </div>
                                <p class="price">$${item.price}</p>
                                <button class="remove-btn">Remove</button>
                            </div>
                                                                        

                        </div>`;
                    cartContainer.append(productHTML);
                });

                // Calculate total price
                var totalPrice = calculateTotalPrice(cartItems);
                $("#total-price").text("Total Price: $" + totalPrice.toFixed(2));
            }
        
            // Function to calculate total price
            function calculateTotalPrice(cartItems) {
                return cartItems.reduce(function (total, item) {
                    return total + (parseFloat(item.price) * item.quantity);
                }, 0);
            }
          

            // Remove button click event
            cartContainer.on('click', '.remove-btn', function () {
                var itemId = $(this).closest('.cart-item').data('id');
                // Find the index of the item with the given ID
                var itemIndex = cartItems.findIndex(item => item.id === itemId);
                if (itemIndex !== -1) {
                    // Remove the item from the cartItems array
                    cartItems.splice(itemIndex, 1);
                    // Update localStorage
                    localStorage.setItem("cartItems", JSON.stringify(cartItems));
                    // Update the displayed cart items
                    displayCartItems(cartItems);
                }
            });

            // Increase quantity button click event
            cartContainer.on('click', '.increase-quantity-btn', function () {
                var itemId = $(this).closest('.cart-item').data('id');
                var itemIndex = cartItems.findIndex(item => item.id === itemId);
                if (itemIndex !== -1) {
                    // If quantity is not set, initialize it to 1
                    if (!cartItems[itemIndex].quantity) {
                        cartItems[itemIndex].quantity = 1;
                    } else {
                        cartItems[itemIndex].quantity++; // Increase quantity by 1
                    }
                    // Update localStorage
                    localStorage.setItem("cartItems", JSON.stringify(cartItems));
                    // Update the displayed cart items
                    displayCartItems(cartItems);
                }
            });


            // Decrease quantity button click event
            cartContainer.on('click', '.decrease-quantity-btn', function () {
                var itemId = $(this).closest('.cart-item').data('id');
                var itemIndex = cartItems.findIndex(item => item.id === itemId);
                if (itemIndex !== -1 && cartItems[itemIndex].quantity > 1) {
                    cartItems[itemIndex].quantity--; // Decrease quantity by 1, but not below 1
                    // Update localStorage
                    localStorage.setItem("cartItems", JSON.stringify(cartItems));
                    // Update the displayed cart items
                    displayCartItems(cartItems);
                }
            });

            // Redirect to payment page with total price
            $("#checkout-btn").click(function (event) {
                event.preventDefault(); // Prevent default link behavior
                window.location.href = "/Payment/PaymentPage?totalPrice=" + calculateTotalPrice(cartItems).toFixed(2);
            });
        });




   </script>


   
        
  
</body>
</html>


@*
  //$(document).ready(function () {
		//    // Retrieve cart items from localStorage
		//    var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

		//    // Get the container to display cart items
		//    var cartContainer = $("#cart-items");

		//    // Iterate over cart items and display them
		//    cartItems.forEach(function (item) {
		//        var productHTML = `
		//            <div>
	//                <img src="${item.imageUrl}" alt="${item.name}">
	//                <p>${item.name} - $${item.price}</p>
	//
</div>`;
		//        cartContainer.append(productHTML);
		//    });

		//    // Calculate total price
		//    var totalPrice = cartItems.reduce(function (total, item) {
		//        return total + parseFloat(item.price);
		//    }, 0);

		//    $("#total-price").text("Total Price: $" + totalPrice.toFixed(2));
		//    // Calculate total price
		//    // Redirect to payment page with total price
		//    $("#checkout-btn").click(function (event) {
		//        event.preventDefault(); // Prevent default link behavior
		//        window.location.href = "/Payment/PaymentPage?totalPrice=" + totalPrice.toFixed(2);
		//    });

		//});
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		//$(document).ready(function () {
		//    // Retrieve cart items from localStorage
		//    var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

		//    // Get the container to display cart items
		//    var cartContainer = $("#cart-items");

		//    // Iterate over cart items and display them
		//    cartItems.forEach(function (item, index) {
		//        var productHTML = `
		//            <div class="cart-item" data-index="${index}">
	//                <img src="${item.imageUrl}" alt="${item.name}">
	//                <p>${item.name} - $${item.price}</p>
	//                <button class="remove-btn">Remove</button>
	//
</div>`;
		//        cartContainer.append(productHTML);
		//    });

		//    // Calculate total price
		//    var totalPrice = cartItems.reduce(function (total, item) {
		//        return total + parseFloat(item.price);
		//    }, 0);

		//    $("#total-price").text("Total Price: $" + totalPrice.toFixed(2));

		//    // Add click event listener to remove buttons
		//    $(".remove-btn").click(function () {
		//        var index = $(this).closest(".cart-item").data("index");
		//        // Remove item from cartItems array
		//        cartItems.splice(index, 1);
		//        // Update localStorage
		//        localStorage.setItem("cartItems", JSON.stringify(cartItems));
		//        // Remove the item from the DOM
		//        $(this).closest(".cart-item").remove();
		//        // Recalculate total price
		//        totalPrice = cartItems.reduce(function (total, item) {
		//            return total + parseFloat(item.price);
		//        }, 0);
		//        $("#total-price").text("Total Price: $" + totalPrice.toFixed(2));
		//    });

		//    // Redirect to payment page with total price
		//    $("#checkout-btn").click(function (event) {
		//        event.preventDefault(); // Prevent default link behavior
		//        window.location.href = "/Payment/PaymentPage?totalPrice=" + totalPrice.toFixed(2);
		//    });
		//});
		/////////////////////////////////////////////////////////////////////////////////////////////*@