@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model List<Sweet_Shop.Models.Product>


@{
    ViewData["Title"] = "Product Store";
}
@* 
<h1 class="text-center mb-4">Product Store</h1>



<head>
    <style>
        form.form-inline {
          display: flex;
          align-items: center; /* Vertically align elements */
          margin-bottom: 15px; /* Add some space below the form */
        }

        .form-group {
          margin-right: 15px; /* Space between elements */
        }

        .btn-add-product {
          background-color: #5bc0de; /* Adjust color as needed */
          border-color: #46b8da; /* Adjust border color as needed */
          color: white; /* Make text white */
        }

        .btn-primary {
          /* Customize primary button colors as needed */
        }



          .form-group {
            margin-bottom: 10px; /* Add some space between elements vertically */
          }
        }


    </style>
</head>



 <style>
 /* Style the dropdown container */
.input-group {
  /* Adjust width as needed */
  width: 200px;
}

/* Style the dropdown select element */
.form-select {
  /* Remove default border */
  border: none;
  /* Add some padding */
  padding: 5px 10px;
  /* Add a subtle border on hover */
  border-radius: 4px;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.2s ease-in-out;
}

/* Style the dropdown select element on hover */
.form-select:hover {
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);
}
</style>

<!-- Add Product button -->



<div class="container">
    <div class="row">
        <div class="col">
            <form asp-action="ViewProducts" asp-controller="Products" method="get" class="form-inline">
                <div class="form-group">
                    <a href="/Products/AddProduct" class="btn btn-primary btn-add-product">Add Product</a>
                </div>
                <div class="form-group">
                    <select class="form-control" name="sortOrder" id="sortOrder" onchange="this.form.submit()">
                        <option value="">Sort By</option>
                        <option value="name_asc">A - Z</option>
                        <option value="name_desc">Z - A</option>
                        <option value="price_asc">Price Ascending</option>
                        <option value="price_desc">Price Descending</option>
                        <option value="popular">Most Popular</option>
                    </select>
                </div>
                <div class="form-group">
                    <select name="category" id="category" class="form-control" onchange="this.form.submit()">
                        <option value="">All Categories</option>
                        <option value="Raw materials for baking">Raw materials for baking</option>
                        <option value="Icing and decorating cakes">Icing and decorating cakes</option>
                        <option value="Cake packaging">Cake packaging</option>
                        <option value="Baking Tools">Baking Tools</option>
                    </select>
                </div>
                <div class="form-group">
                    <select name="IsOnSale" id="IsOnSale" class="form-control" onchange="this.form.submit()">
                        <option value="">All Products</option>
                        <option value="true">On Sale</option>
                        <option value="false">Not On Sale</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Apply Filters</button>
                <a asp-action="ViewProducts" asp-controller="Products" class="btn btn-secondary ml-2">Reset</a>
            </form>
        </div>
    </div>



    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in Model)
        {
            <div class="col">
                <div class="card h-100">
                    <img src="@product.imageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">Category: @product.category</p>
                        <p class="card-text">
                            @if (product.IsOnSale)
                            {
                                <span class="sale-price">Sale: $@product.salePrice</span>
                                <span class="original-price">$<del>@product.price</del></span>
                            }
                            else
                            {
                                <span class="regular-price">$@product.price</span>
                            }
                        </p>
                        <p class="card-text">
                            <small class="text-muted">Stock: @product.stock</small>
                        </p>
                    </div>
                    <div class="card-footer">
                        <a href="#" class="btn btn-secondary">Add to Cart</a>
                        <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="btn btn-primary">Details</a>
                        <a href="@Url.Action("UpdateProduct", "Products", new { id = product.Id })" class="btn btn-warning">Edit</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

 *@
 <!DOCTYPE html>
<html>
<head>
    <title>Product Management</title>
    <style>
        /* body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        } */

        .create-account-link {
            color: #524347; /* Change to whatever color you prefer */
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            font-family: Fantasy, sans-serif;
            background-color: #f4f4f4;
        }

        h2 {
            text-align: center;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .input-group label {
            display: block;
            margin-bottom: 5px;
        }

        .input-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .btn {
            padding: 10px;
            background-color: #524347;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn:hover {
            background-color: #524347;
        }

        .form-control {
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        }

        .form-control:focus {
            border-color: #66afe9;
            outline: 0;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
        }
    </style>
</head>
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                       <form asp-action="ViewProducts" asp-controller="Products" method="get" class="form-inline" id="filterForm">
                    <div class="form-group">
                        <select class="form-control" name="sortOrder" id="sortOrder">
                            <option value="">Sort By</option>
                            <option value="name_asc">A - Z</option>
                            <option value="name_desc">Z - A</option>
                            <option value="price_asc">Price Ascending</option>
                            <option value="price_desc">Price Descending</option>
                            <option value="popular">Most Popular</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <select name="category" id="category" class="form-control">
                            <option value="">Sort By Categories</option>
                            <option value="Raw materials for baking">Raw materials for baking</option>
                            <option value="Icing and decorating cakes">Icing and decorating cakes</option>
                            <option value="Cake packaging">Cake packaging</option>
                            <option value="Baking Tools">Baking Tools</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <select name="isOnSale" id="isOnSale" class="form-control">
                            <option value="">Is On Sale?</option>
                            <option value="true">On Sale</option>
                            <option value="false">Not On Sale</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" name="searchString" id="searchString" placeholder="Search Products">
                    </div>

                    <div class="form-group">
                        <select class="form-control" name="priceRange" id="priceRange">
                            <option value="">Price Range</option>
                            <option value="1-20">1-20</option>
                            <option value="21-40">21-40</option>
                            <option value="41-60">41-60</option>
                            <option value="61-80">61-80</option>
                        </select>
                    </div>
                    @* <button type="submit" class="btn btn-primary">Search</button> *@

                    @* <button type="submit" class="btn btn-primary">APLLY</button> *@
                   
                    <button type="submit" class="btn btn-primary">APLLY</button>

                    <a asp-action="ViewProducts" asp-controller="Products" class="btn btn-secondary ml-2" id="resetButton">Reset</a>
                </form>
            </div>
        </div>
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100">
                        <img src="@product.imageUrl" class="card-img-top" alt="@product.Name">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">Category: @product.category</p>
                            <p class="card-text">
                                @if (product.IsOnSale)
                                {
                                    <span class="sale-price">Sale: $@product.salePrice</span>
                                    <span class="original-price">$<del>@product.price</del></span>
                                }
                                else
                                {
                                    <span class="regular-price">$@product.price</span>
                                }
                            </p>
                            <p class="card-text">
                                <small class="text-muted">Stock: @product.stock</small>
                            </p>
                        </div>
                        <div class="card-footer">
                          
                            @if (product.stock > 0)
                            {
                                <a asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@product.Id" class="btn btn-primary">Add to Cart</a>
                            }
                            else{
                                if (!string.IsNullOrEmpty(ViewData["CustomerId"] as string) && product.stock == 0)
                                {
                                    <form asp-controller="Products" asp-action="SetNotifications">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                      
                                        <input type="hidden" name="CustomerId" value="CustomerId" />
                                        <button type="submit" class="btn btn-warning">Notify Me</button>
                                    </form>
                                }
                                <a class="btn btn-primary">empty stock</a>
                            }
                            <a asp-controller="Cart" asp-action="buyNow" asp-route-productId="@product.Id" class="btn btn-primary">buy Now</a>

                            <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="btn btn-primary">Details</a>
                            @* <a href="@Url.Action("UpdateProduct", "Products", new { id = product.Id })" class="btn btn-warning">Edit</a> *@
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".add-to-cart").click(function () {
                var productId = $(this).data("product-id");
                var productName = $(this).data("product-name");
                var productPrice = $(this).data("product-price");
                var productImageUrl = $(this).data("product-image");
                var productStock = $(this).data("product-stock");
                var productsalePrice = $(this).data("product-salePrice");
                var productcategory = $(this).data("product-category");
                var productIsOnSale = $(this).data("product-IsOnSale");





                var product = {
                    id: productId,
                    name: productName,
                    price: productPrice,
                    stock: productStock,
                    salePrice: productsalePrice,
                    imageUrl: productImageUrl,
                    category: productcategory,
                    IsOnSale: productIsOnSale

                };

                var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
                cartItems.push(product);
                localStorage.setItem("cartItems", JSON.stringify(cartItems));
            });
        });
    </script>
</body>

</html>
@*<script>
	$(document).ready(function () {
		$('.btn-add-to-cart').click(function (e) {
			e.preventDefault();
			var productId = $(this).data('product-id');
			$.post('/ShoppingCart/AddToCart', { productId: productId }, function (data) {
				// Handle response if needed (e.g., update cart count)
				console.log('Product added to cart successfully');
			});
		});
	});

</script>*@
@*<script>
    function addToCartAndUpdateIcon() {
        // Update cart count in localStorage
        var cartCount = parseInt(localStorage.getItem('cartCount')) || 0;
        cartCount++;
        localStorage.setItem('cartCount', cartCount);

        // Update cart icon
        updateCartIcon(cartCount);

        // Optionally, you can redirect the user to the cart page or perform other actions
        // window.location.href = 'cart.html';
    }

    function updateCartIcon(cartCount) {
        // Update the cart count displayed in the icon
        var cartCountElement = document.getElementById('cartCount');
        if (cartCountElement) {
            cartCountElement.textContent = cartCount;
        }
    }
    class="btn btn-secondary btn-add-to-cart" data-product-id="@product.Id">
</script>*@